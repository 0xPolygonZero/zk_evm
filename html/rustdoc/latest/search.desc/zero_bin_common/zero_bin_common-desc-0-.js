searchState.loadedDescShard("zero_bin_common", 0, "Parsing utilities.\nGlobal prover state management and utilities.\nRange of blocks to be processed and proven.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert the block interval into an async stream of block …\nConvert the block interval into an unbounded async stream …\nCreate a new block interval\nAn error type for save debug input information.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerializes a collection of inputs to a pretty-printed JSON …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSpecifies whether to persist the processed circuits.\nPersist the processed circuits to disk.\nLoad all the table circuits into a monolithic bundle.\nDo not persist the processed circuits.\nLoad the circuit tables as needed for shrinking STARK …\nProduct of <code>CircuitConfig</code> and <code>CircuitPersistence</code>.\nSpecifies how to load the table circuits.\n<code>AllRecursiveCircuits</code> dynamic circuit configuration.\nCLI arguments for constructing a <code>CircuitConfig</code>, which can …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a segment proof using the specified input.\nInitialize global prover state from the configuration.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads a verifier state from disk or generate it.\nAll possible plonky2 table circuits.\nNew type wrapper for <code>Range</code> that implements <code>FromStr</code> and …\nBuild the circuits from the current config.\nGet all circuits specified in the config.\nGet the environment variable key for the circuit.\nGet the circuit name as a short str literal.\nGet the circuit name as a str literal.\nGet the default size for the circuit.\nGet all circuits specified in the config with their <code>Circuit</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a unique string representation of the config.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet all circuits specified in the config.\nSet the size of a the given <code>Circuit</code>.\nSpecifies whether to persist the processed circuits.\nPersist the processed circuits to disk.\nDo not persist the processed circuits.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen we serialize/deserialize circuits, we rely on the …\nFlushes all existing prover state configurations and …\nWrites the provided <code>AllRecursiveCircuits</code> to disk with all …\nWe store serialized circuits inside the cache directory …")